- `std::exception`
_Base class for all standard exceptions._
- `std::logic_error`
_Errors in program logic (should be prevented)._
    - `std::invalid_argument`
    - `std::domain_error`
    - `std::length_error`
    - `std::out_of_range`

- `std::runtime_error`
_Errors detectable only at run time._
    - `std::range_error`
    - `std::overflow_error`
    - `std::underflow_error`

#include <exception>
#include <cstring>  // For strcpy in C++98

class MyException : public std::exception {
    char msg[100];
public:
    MyException(const char* message) {
        strncpy(msg, message, 99);
        msg[99] = '\0'; // Ensure null-termination
    }

    virtual const char* what() const throw() {
        return msg;
    }
};

usage
throw MyException("Custom error occurred!");